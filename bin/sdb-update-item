#!/usr/bin/env python
import os
import sys
import json
import boto
import logging
import kaws.config
import kaws.sdb
import kstdlib.logging.config
from kaws.sdb import write_item
from optparse import OptionParser

def alter_item(conn, domain, name, data):
	item = domain.get_item(name)
	if not item:
		sys.stderr.write("%s does not exist\n" % name)
		sys.exit(1)
	write_item(domain, name, data)
	print json.dumps(domain.get_item(name), indent=2)

def main():
	parser = optionParser()
	(options, args) = parser.parse_args()
	kstdlib.logging.config.configure_logging(options)
	if len(args) != 1:
		sys.stderr.write("One arg [item name] required\n")
		sys.exit(1)
	data = json.load(sys.stdin)
	creds = kaws.config.get_keys(options)
	conn = kaws.sdb.connect(creds)
	domain = kaws.sdb.get_domain(conn, options)
	alter_item(conn, domain, args[0], data)

def optionParser():
	usage = "usage: %prog [options] [item name]\n\n"
	usage += "Adds or alters keys on item [name] based on json on stdin. If a key is null, it will be deleted.  Prints the results as json on stdout"

	parser = OptionParser(usage=usage)
	kstdlib.logging.config.get_logging_options(parser)
	kaws.config.get_aws_options(parser)
	kaws.sdb.get_sdb_options(parser)
	return parser

if __name__=='__main__':
	main()

# Local Variables:
# tab-width: 4
# indent-tabs-mode: t
# End:
