#!/usr/bin/env python
import os
import logging
import sys
import boto
import kaws.config
import kaws.s3
import kstdlib.logging.config
from boto import exception
from boto.s3.connection import S3Connection
from boto.s3.key import Key
from optparse import OptionParser

def main():
	parser = optionParser()
	(options, args) = parser.parse_args()
	kstdlib.logging.config.configure_logging(options)

	try:
		creds = kaws.config.get_keys(options)
		bucket_name = kaws.s3.get_bucket_name(options)
		conn = kaws.s3.connect(
			creds, bucket_name=bucket_name, ordinary=options.ordinary)
		bucket = kaws.s3.get_bucket(conn, options)
		for arg in args:
			if options.verbose:
				print "%s/%s" % (options.bucket, arg)
			kaws.s3.delete_key(bucket, arg)
	except boto.exception.BotoServerError, e:
		sys.stderr.write(str(e))
		sys.exit(1)

def optionParser():
	usage = "usage: %prog [options] [key]\n\n"
	usage += "Deletes the key from the bucket"

	parser = OptionParser(usage=usage)
	kstdlib.logging.config.get_logging_options(parser)
	kaws.config.get_aws_options(parser, rw=True)
	kaws.config.get_verbose_option(parser)
	kaws.s3.get_s3_options(parser)

	return parser

if __name__=='__main__':
	main()

# Local Variables:
# tab-width: 4
# indent-tabs-mode: t
# End:
